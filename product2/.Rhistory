}
yMax <- max(lrvOriginalHatArray)
yMin <- min(lrvOriginalHatArray)
saveJjp("origin_lrv","./plots/")
plot(lrvOriginalArray~sizeArray,type="c",ylim = c(yMin-1,yMax-1),col="blue",xlab="",ylab = "alphaHat")
points(lrvOriginalHatArray~sizeArray,pch=20)
title("Origin lrv and lrvHat")
graphics.off()
if (!require("rstudioapi"))
install.packages("rstudioapi")
library(rstudioapi)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
sizeArray <- seq(10,1100,by = 100)
psi = .5
sigma = 1
replicationCount <- 5
gamma0 = sigma ^ 2 * (1 + psi ^ 2)
gamma1 = psi * sigma^2
lrvOriginal = gamma0 + 2 * gamma1
lrvOriginalArray<-rep(lrvOriginal,length(sizeArray))
lrvOriginalHatArray <- numeric(length = length(sizeArray))
for(index in 1:length(sizeArray))
{
originalReplicated <- createOriginalMA1Replicated(replicationCount = replicationCount,
size = sizeArray[index],
psi = psi,
sigma = sigma)
lrvOriginalHatArray[index] <- createLRVof2dArray(array2d = originalReplicated)
}
yMax <- max(lrvOriginalHatArray)
yMin <- min(lrvOriginalHatArray)
saveJpg("origin_lrv","./plots/")
plot(lrvOriginalArray~sizeArray,type="c",ylim = c(yMin-1,yMax-1),col="blue",xlab="",ylab = "alphaHat")
points(lrvOriginalHatArray~sizeArray,pch=20)
title("Origin lrv and lrvHat")
graphics.off()
if (!require("rstudioapi"))
install.packages("rstudioapi")
library(rstudioapi)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
size <- 10
psi = .5
sigma = 1
replicationCountArray <- seq(10,1100,by = 100)
gamma0 = sigma ^ 2 * (1 + psi ^ 2)
gamma1 = psi * sigma^2
lrvOriginal = gamma0 + 2 * gamma1
lrvOriginalArray<-rep(lrvOriginal,length(replicationCountArray))
lrvOriginalHatArray <- numeric(length = length(replicationCountArray))
for(index in 1:length(replicationCountArray))
{
originalReplicated <- createOriginalMA1Replicated(replicationCount = replicationCountArray[index],
size = size,
psi = psi,
sigma = sigma)
lrvOriginalHatArray[index] <- createLRVof2dArray(array2d = originalReplicated)
}
df <- data.frame(lrvOriginalHatArray,lrvOriginalArray)
yMax <- max(df)
yMin <- min(df)
saveJpg("origin_lrv_RC","./plots/")
plot(lrvOriginalArray~replicationCountArray,type="c",
ylim = c(yMin-1,yMax+1),col="blue",xlab="",ylab = "alphaHat")
points(lrvOriginalHatArray~replicationCountArray,pch=20)
title("Origin lrv and lrvHat")
graphics.off()
# setwd() to the dir where the script have been stored
if (!require("rstudioapi"))
install.packages("rstudioapi")
library(rstudioapi)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loading the functions
source("sourceAll.R")
replicationCount = 50
size = 10
psi = .5
# psi = 0 # makes it iid
sigma = 1
mean = 0
cMatrix <- createCMatrix(size = size,
psi = psi,
sigma = sigma)
lrvProductColReplicated = cMatrix [1,] + 2 * cMatrix [2,]
NlrvProductColReplicatedHat <- 5
lrvProductColReplicatedHatArray <- matrix(0, nrow = size - 1,ncol = NlrvProductColReplicatedHat)
for(index in 1:NlrvProductColReplicatedHat)
{
originalReplicated <- createOriginalMA1Replicated(replicationCount = replicationCount,
size = size,
psi = psi,
sigma = sigma)
productColReplicated <- createProductColReplicated(originalReplicated = originalReplicated,
size = size,
replicationCount = replicationCount)
lrvProductColReplicatedHatArray[,index] <- createLRVof3dArray(array3d = productColReplicated)
}
df <- data.frame(lrvProductColReplicated,lrvProductColReplicatedHatArray)
max <- max(df)
min <- min(df)
xArray <- 1:(size-1)
saveJpg("productCol_lrv","./plots/")
plot(lrvProductColReplicated ~ xArray, type = "l",col = "red",ylim = c(min,max))
for(index in 1:NlrvProductColReplicatedHat)
{
lines( lrvProductColReplicatedHatArray[,index]~xArray,col="blue")
}
graphics.off()
?plot
# setwd() to the dir where the script have been stored
if (!require("rstudioapi"))
install.packages("rstudioapi")
library(rstudioapi)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loading the functions
source("sourceAll.R")
replicationCount = 50
size = 10
psi = .5
# psi = 0 # makes it iid
sigma = 1
mean = 0
cMatrix <- createCMatrix(size = size,
psi = psi,
sigma = sigma)
lrvProductColReplicated = cMatrix [1,] + 2 * cMatrix [2,]
NlrvProductColReplicatedHat <- 5
lrvProductColReplicatedHatArray <- matrix(0, nrow = size - 1,ncol = NlrvProductColReplicatedHat)
for(index in 1:NlrvProductColReplicatedHat)
{
originalReplicated <- createOriginalMA1Replicated(replicationCount = replicationCount,
size = size,
psi = psi,
sigma = sigma)
productColReplicated <- createProductColReplicated(originalReplicated = originalReplicated,
size = size,
replicationCount = replicationCount)
lrvProductColReplicatedHatArray[,index] <- createLRVof3dArray(array3d = productColReplicated)
}
df <- data.frame(lrvProductColReplicated,lrvProductColReplicatedHatArray)
max <- max(df)
min <- min(df)
xArray <- 1:(size-1)
saveJpg("productCol_lrv","./plots/")
plot(lrvProductColReplicated ~ xArray, type = "l",col = "red",ylim = c(min,max),xlab  = "size")
title(main="ProductCol lrv & lrvHat")
lineArray <- c("ProductColLRV","ProductColLRVHat")
legend("bottomright",
title = "LRV",
lineArray,
fill = c("red","blue"))
for(index in 1:NlrvProductColReplicatedHat)
{
lines( lrvProductColReplicatedHatArray[,index]~xArray,col="blue")
}
graphics.off()
devtools::load_all("C:/Users/MKS/product2/product2")
# setwd() to the dir where the script have been stored
if (!require("rstudioapi"))
install.packages("rstudioapi")
library(rstudioapi)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loading the functions
source("sourceAll.R")
replicationCount = 50
size = 10
psi = .5
# psi = 0 # makes it iid
sigma = 1
mean = 0
cMatrix <- createCMatrix(size = size,
psi = psi,
sigma = sigma)
lrvProductColReplicated = cMatrix [1,] + 2 * cMatrix [2,]
NlrvProductColReplicatedHat <- 5
lrvProductColReplicatedHatArray <- matrix(0, nrow = size - 1,ncol = NlrvProductColReplicatedHat)
for(index in 1:NlrvProductColReplicatedHat)
{
originalReplicated <- createOriginalMA1Replicated(replicationCount = replicationCount,
size = size,
psi = psi,
sigma = sigma)
productColReplicated <- createProductColReplicated(originalReplicated = originalReplicated,
size = size,
replicationCount = replicationCount)
lrvProductColReplicatedHatArray[,index] <- createLRVof3dArray(array3d = productColReplicated)
}
df <- data.frame(lrvProductColReplicated,lrvProductColReplicatedHatArray)
max <- max(df)
min <- min(df)
xArray <- 1:(size-1)
saveJpg("productCol_lrv","./plots/")
plot(lrvProductColReplicated ~ xArray, type = "l",col = "red",ylim = c(min,max),xlab  = "size")
title(main="ProductCol lrv & lrvHat")
lineArray <- c("ProductColLRV","ProductColLRVHat")
legend("bottomright",
title = "LRV",
lineArray,
fill = c("red","blue"))
for(index in 1:NlrvProductColReplicatedHat)
{
lines( lrvProductColReplicatedHatArray[,index]~xArray,col="blue")
}
graphics.off()
# setwd() to the dir where the script have been stored
if (!require("rstudioapi"))
install.packages("rstudioapi")
library(rstudioapi)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loading the functions
source("sourceAll.R")
replicationCount = 50
size = 10
psi = .5
# psi = 0 # makes it iid
sigma = 1
mean = 0
cMatrix <- createCMatrix(size = size,
psi = psi,
sigma = sigma)
lrvProductColReplicated = cMatrix [1,] + 2 * cMatrix [2,]
NlrvProductColReplicatedHat <- 5
lrvProductColReplicatedHatArray <- matrix(0, nrow = size - 1,ncol = NlrvProductColReplicatedHat)
for(index in 1:NlrvProductColReplicatedHat)
{
originalReplicated <- createOriginalMA1Replicated(replicationCount = replicationCount,
size = size,
psi = psi,
sigma = sigma)
productColReplicated <- createProductColReplicated(originalReplicated = originalReplicated,
size = size,
replicationCount = replicationCount)
lrvProductColReplicatedHatArray[,index] <- createLRVof3dArray(array3d = productColReplicated)
}
df <- data.frame(lrvProductColReplicated,lrvProductColReplicatedHatArray)
max <- max(df)
min <- min(df)
xArray <- 1:(size-1)
saveJpg("productCol_lrv","./plots/")
plot(lrvProductColReplicated ~ xArray, type = "l",col = "red",ylim = c(min,max),xlab  = "size")
title(main="ProductCol lrv & lrvHat")
lineArray <- c("ProductColLRV","ProductColLRVHat")
legend("bottomright",
title = "LRV",
lineArray,
fill = c("red","blue"))
for(index in 1:NlrvProductColReplicatedHat)
{
lines( lrvProductColReplicatedHatArray[,index]~xArray,col="blue")
}
graphics.off()
# setwd() to the dir where the script have been stored
if (!require("rstudioapi"))
install.packages("rstudioapi")
library(rstudioapi)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loading the functions
source("sourceAll.R")
replicationCount = 50
size = 10
psi = .5
# psi = 0 # makes it iid
sigma = 1
mean = 0
cMatrix <- createCMatrix(size = size,
psi = psi,
sigma = sigma)
lrvProductColReplicated = cMatrix [1,] + 2 * cMatrix [2,]
NlrvProductColReplicatedHat <- 5
lrvProductColReplicatedHatArray <- matrix(0, nrow = size - 1,ncol = NlrvProductColReplicatedHat)
for(index in 1:NlrvProductColReplicatedHat)
{
originalReplicated <- createOriginalMA1Replicated(replicationCount = replicationCount,
size = size,
psi = psi,
sigma = sigma)
productColReplicated <- createProductColReplicated(originalReplicated = originalReplicated,
size = size,
replicationCount = replicationCount)
lrvProductColReplicatedHatArray[,index] <- createLRVof3dArray(array3d = productColReplicated)
}
df <- data.frame(lrvProductColReplicated,lrvProductColReplicatedHatArray)
max <- max(df)
min <- min(df)
xArray <- 1:(size-1)
saveJpg("productCol_lrv","./plots/")
plot(lrvProductColReplicated ~ xArray, type = "l",col = "red",ylim = c(min,max),xlab  = "size")
title(main="ProductCol lrv & lrvHat")
lineArray <- c("ProductColLRV","ProductColLRVHat")
legend("topright",
title = "LRV",
lineArray,
fill = c("red","blue"))
for(index in 1:NlrvProductColReplicatedHat)
{
lines( lrvProductColReplicatedHatArray[,index]~xArray,col="blue")
}
graphics.off()
devtools::load_all("C:/Users/MKS/product2/product2")
?createOriginalMA1
# setwd() to the dir where the script have been stored
if (!require("rstudioapi"))
install.packages("rstudioapi")
library(rstudioapi)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loading the functions
source("sourceAll.R")
replicationCount = 50
size = 10
psi = .5
# psi = 0 # makes it iid
sigma = 1
mean = 0
cMatrix <- createCMatrix(size = size,
psi = psi,
sigma = sigma)
lrvProductColReplicated = cMatrix [1,] + 2 * cMatrix [2,]
xArray <- 1:(size-1)
NlrvProductColReplicatedHat <- 5
lrvProductColReplicatedHatArray <- matrix(0, nrow = size - 1,ncol = NlrvProductColReplicatedHat)
for(index in 1:NlrvProductColReplicatedHat)
{
originalReplicated <- createOriginalMA1Replicated(replicationCount = replicationCount,
size = size,
psi = psi,
sigma = sigma)
productColReplicated <- createProductColReplicated(originalReplicated = originalReplicated,
size = size,
replicationCount = replicationCount)
lrvHat <- createLRVof3dArray(array3d = productColReplicated)
saveJpg("productCol_lrvHatTemp","./plots/")
plot(lrvHat~xArray,type = "l", col = "blue",xlab = "size")
title(main = "ProductColLrvHat")
graphics.off()
lrvProductColReplicatedHatArray[,index] <- lrvHat
}
df <- data.frame(lrvProductColReplicated,lrvProductColReplicatedHatArray)
max <- max(df)
min <- min(df)
saveJpg("productCol_lrv","./plots/")
plot(lrvProductColReplicated ~ xArray, type = "l",col = "red",ylim = c(min,max),xlab  = "size")
title(main="ProductCol lrv & lrvHat")
lineArray <- c("ProductColLRV","ProductColLRVHat")
legend("topright",
title = "LRV",
lineArray,
fill = c("red","blue"))
for(index in 1:NlrvProductColReplicatedHat)
{
lines( lrvProductColReplicatedHatArray[,index]~xArray,col="blue")
}
graphics.off()
devtools::load_all("C:/Users/MKS/product2/product2")
# setwd() to the dir where the script have been stored
if (!require("rstudioapi"))
install.packages("rstudioapi")
library(rstudioapi)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loading the functions
source("sourceAll.R")
replicationCount = 50
size = 10
psi = .5
# psi = 0 # makes it iid
sigma = 1
mean = 0
cMatrix <- createCMatrix(size = size,
psi = psi,
sigma = sigma)
lrvProductColReplicated = cMatrix [1,] + 2 * cMatrix [2,]
xArray <- 1:(size-1)
NlrvProductColReplicatedHat <- 5
lrvProductColReplicatedHatArray <- matrix(0, nrow = size - 1,ncol = NlrvProductColReplicatedHat)
for(index in 1:NlrvProductColReplicatedHat)
{
originalReplicated <- createOriginalMA1Replicated(replicationCount = replicationCount,
size = size,
psi = psi,
sigma = sigma)
productColReplicated <- createProductColReplicated(originalReplicated = originalReplicated,
size = size,
replicationCount = replicationCount)
lrvHat <- createLRVof3dArray(array3d = productColReplicated)
saveJpg("productCol_lrvHatTemp","./plots/")
plot(lrvHat~xArray,type = "l", col = "blue",xlab = "size")
title(main = "ProductColLrvHat")
graphics.off()
lrvProductColReplicatedHatArray[,index] <- lrvHat
}
df <- data.frame(lrvProductColReplicated,lrvProductColReplicatedHatArray)
max <- max(df)
min <- min(df)
saveJpg("productCol_lrv","./plots/")
plot(lrvProductColReplicated ~ xArray, type = "l",col = "red",ylim = c(min,max),xlab  = "size")
title(main="ProductCol lrv & lrvHat")
lineArray <- c("ProductColLRV","ProductColLRVHat")
legend("topright",
title = "LRV",
lineArray,
fill = c("red","blue"))
for(index in 1:NlrvProductColReplicatedHat)
{
lines( lrvProductColReplicatedHatArray[,index]~xArray,col="blue")
}
graphics.off()
# setwd() to the dir where the script have been stored
if (!require("rstudioapi"))
install.packages("rstudioapi")
library(rstudioapi)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loading the functions
source("sourceAll.R")
replicationCount = 50
size = 10
psi = .5
# psi = 0 # makes it iid
sigma = 1
mean = 0
cMatrix <- createCMatrix(size = size,
psi = psi,
sigma = sigma)
lrvProductColReplicated = cMatrix [1,] + 2 * cMatrix [2,]
xArray <- 1:(size-1)
NlrvProductColReplicatedHat <- 5
lrvProductColReplicatedHatArray <- matrix(0, nrow = size - 1,ncol = NlrvProductColReplicatedHat)
for(index in 1:NlrvProductColReplicatedHat)
{
originalReplicated <- createOriginalMA1Replicated(replicationCount = replicationCount,
size = size,
psi = psi,
sigma = sigma)
productColReplicated <- createProductColReplicated(originalReplicated = originalReplicated,
size = size,
replicationCount = replicationCount)
lrvHat <- createLRVof3dArray(array3d = productColReplicated)
fileName <- "productCol_lrvHatTemp"
fileName <- paste(fileName,index,sep = "_")
saveJpg(fileName,"./plots/")
plot(lrvHat~xArray,type = "l", col = "blue",xlab = "size")
title(main = "ProductColLrvHat")
graphics.off()
lrvProductColReplicatedHatArray[,index] <- lrvHat
}
df <- data.frame(lrvProductColReplicated,lrvProductColReplicatedHatArray)
max <- max(df)
min <- min(df)
saveJpg("productCol_lrv","./plots/")
plot(lrvProductColReplicated ~ xArray, type = "l",col = "red",ylim = c(min,max),xlab  = "size")
title(main="ProductCol lrv & lrvHat")
lineArray <- c("ProductColLRV","ProductColLRVHat")
legend("topright",
title = "LRV",
lineArray,
fill = c("red","blue"))
for(index in 1:NlrvProductColReplicatedHat)
{
lines( lrvProductColReplicatedHatArray[,index]~xArray,col="blue")
}
graphics.off()
# setwd() to the dir where the script have been stored
if (!require("rstudioapi"))
install.packages("rstudioapi")
library(rstudioapi)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loading the functions
source("sourceAll.R")
replicationCount = 50
size = 10
psi = .5
# psi = 0 # makes it iid
sigma = 1
mean = 0
cMatrix <- createCMatrix(size = size,
psi = psi,
sigma = sigma)
lrvProductColReplicated = cMatrix [1,] + 2 * cMatrix [2,]
xArray <- 1:(size-1)
NlrvProductColReplicatedHat <- 5
lrvProductColReplicatedHatArray <- matrix(0, nrow = size - 1,ncol = NlrvProductColReplicatedHat)
for(index in 1:NlrvProductColReplicatedHat)
{
originalReplicated <- createOriginalMA1Replicated(replicationCount = replicationCount,
size = size,
psi = psi,
sigma = sigma)
productColReplicated <- createProductColReplicated(originalReplicated = originalReplicated,
size = size,
replicationCount = replicationCount)
lrvHat <- createLRVof3dArray(array3d = productColReplicated)
fileName <- "productCol_lrvHatTemp"
fileName <- paste(fileName,index,sep = "_")
saveJpg(fileName,"./plots/")
plot(lrvHat~xArray,type = "l", col = "blue",xlab = "size")
title(main = "ProductColLrvHat")
graphics.off()
lrvProductColReplicatedHatArray[,index] <- lrvHat
}
df <- data.frame(lrvProductColReplicated,lrvProductColReplicatedHatArray)
max <- max(df)
min <- min(df)
saveJpg("productCol_lrv","./plots/")
plot(lrvProductColReplicated ~ xArray, type = "l",col = "red",ylim = c(min,max),xlab  = "size")
title(main="ProductCol lrv & lrvHat")
lineArray <- c("ProductColLRV","ProductColLRVHat")
legend("topright",
title = "LRV",
lineArray,
fill = c("red","blue"))
for(index in 1:NlrvProductColReplicatedHat)
{
lines( lrvProductColReplicatedHatArray[,index]~xArray,col="blue")
}
graphics.off()
